generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Cliente {
  id       String    @id @default(uuid())
  nome     String
  cpf      String    @unique
  rg       String?
  telefone String?
  endereco String?
  cidade   String?
  estado   String?
  locacoes Locacao[] @relation("ClienteComLocacao")

  @@index([cpf])
}

model TipoProduto {
  id       String    @id @default(uuid())
  nome     String
  produtos Produto[] @relation("TipoProdutoComProduto")
}

model CorProduto {
  id       String    @id @default(uuid())
  nome     String
  produtos Produto[] @relation("CorProdutoComProduto")
}

model TamanhoProduto {
  id       String    @id @default(uuid())
  medida   String
  produtos Produto[] @relation("TamanhoProdutoComProduto")
}

model Produto {
  id               String         @id @default(uuid())
  tipoProdutoId    String
  plaqueta         Int            @unique
  corProdutoId     String
  tamanhoProdutoId String
  estaLocada       Boolean        @default(false)
  contadorRelogio  Int            @default(0)
  tipoProduto      TipoProduto    @relation("TipoProdutoComProduto", fields: [tipoProdutoId], references: [id])
  corProduto       CorProduto     @relation("CorProdutoComProduto", fields: [corProdutoId], references: [id])
  tamanhoProduto   TamanhoProduto @relation("TamanhoProdutoComProduto", fields: [tamanhoProdutoId], references: [id])
  locacoes         Locacao[]      @relation("ProdutoComLocacao")

  @@index([tipoProdutoId])
  @@index([tamanhoProdutoId])
  @@index([corProdutoId])
}

model Rota {
  id            String         @id @default(uuid())
  nome          String
  locacoes      Locacao[]      @relation("RotaComLocacao")
  acessosNaRota AcessoNaRota[] @relation("RotaComAcessoNaRota")
}

model Locacao {
  id                  String     @id @default(uuid())
  produtoId           String
  clienteId           String
  rotaId              String
  ehTipoLocacaoMensal Boolean    @default(false)
  valorMensal         Float      @default(0)
  porcentagemEmpresa  Float      @default(0)
  porcentagemCliente  Float      @default(0)
  valorFicha          Float      @default(0)
  valorSaldoDevedor   Float      @default(0)
  produto             Produto    @relation("ProdutoComLocacao", fields: [produtoId], references: [id])
  cliente             Cliente    @relation("ClienteComLocacao", fields: [clienteId], references: [id])
  rota                Rota       @relation("RotaComLocacao", fields: [rotaId], references: [id])
  cobrancas           Cobranca[] @relation("LocacaoComCobranca")

  @@index([produtoId])
  @@index([rotaId])
  @@index([clienteId])
}

model Cobranca {
  id                        String  @id @default(uuid())
  cobrancaId                String
  valorSaldoDevedorAnterior Float   @default(0)
  relogioAtual              Int     @default(0)
  partidasJogadas           Int     @default(0)
  descontoPartida           Int     @default(0)
  valorEmpresa              Float   @default(0)
  valorDescontoEmpresa      Float   @default(0)
  valorAcrescimoEmpresa     Float   @default(0)
  valorParaEmpresaReceber   Float   @default(0)
  valorRecebidoPelaEmpresa  Float   @default(0)
  valorParaClienteReceber   Float   @default(0)
  valorRecebidoPeloCliente  Float   @default(0)
  valorParaProximaCobranca  Float   @default(0)
  cobranca                  Locacao @relation("LocacaoComCobranca", fields: [cobrancaId], references: [id])

  @@index([cobrancaId])
}

model Usuario {
  id            String         @id @default(uuid())
  nome          String
  senha         String
  acessosNaRota AcessoNaRota[] @relation("UsuarioComAcessoNaRota")
}

model AcessoNaRota {
  id        String  @id @default(uuid())
  usuarioId String
  rotaId    String
  usuario   Usuario @relation("UsuarioComAcessoNaRota", fields: [usuarioId], references: [id])
  rota      Rota    @relation("RotaComAcessoNaRota", fields: [rotaId], references: [id])

  @@index([rotaId])
  @@index([usuarioId])
}
